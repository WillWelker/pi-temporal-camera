//copy the line below to paste this flow into Node Red using Import > Clipboard

[{"id":"3bce27d.6ce10d8","type":"ui_template","z":"546bb50e.78adfc","group":"d28118de.c73bd8","name":"Current Image","order":3,"width":"12","height":"10","format":"<img name=\"main\" id=\"main\" border=\"0\" width=\"480\" height=\"460\" src=\"../seq/{{msg.payload}}.jpg\">\n<br>\nCTRL+ to zoom in, CTRL- to zoom out, F11 for full screen","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":1040,"y":140,"wires":[[]]},{"id":"b4d10979.ce57c8","type":"inject","z":"546bb50e.78adfc","name":"record start time","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"00 06 * * *","once":false,"onceDelay":"1","x":210,"y":280,"wires":[["8d21a9c.cc35558"]]},{"id":"8d21a9c.cc35558","type":"exec","z":"546bb50e.78adfc","command":"rm /home/pi/.node-red/static/seq/*.jpg","addpay":false,"append":"","useSpawn":"false","timer":"","oldrc":false,"name":"clear images","x":710,"y":280,"wires":[[],[],[]]},{"id":"b301d941.5c8d78","type":"ui_template","z":"546bb50e.78adfc","group":"b67801e.531e","name":"show gif","order":1,"width":"12","height":"10","format":"\n<img src=\"../gif/{{msg.payload}}.gif\">\n<h3>\n   <i class=\"fa fa-download\" aria-hidden=\"true\"></i>\n   <a href=\"../gif/{{ msg.payload }}.gif\" download=\"time-shift.gif\">Download This GIF </a>|\n   <i class=\"fa fa-cogs\" aria-hidden=\"true\"></i>\n   <a href=\"../\" target=\"_blank\"> Node Settings</a>|\n   <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\n   <a href=\"../ui\"> Reload Page</a>\n      \n</h3>\n","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":1040,"y":440,"wires":[[]]},{"id":"c533d93a.4c4848","type":"inject","z":"546bb50e.78adfc","name":"record stop time","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"00 18 * * *","once":false,"onceDelay":0.1,"x":210,"y":460,"wires":[["5857388d.669678"]]},{"id":"61b6fdcd.919f04","type":"exec","z":"546bb50e.78adfc","command":"/home/pi/.node-red/make-gif.sh","addpay":true,"append":"","useSpawn":"false","timer":"","oldrc":false,"name":"Make gif","x":620,"y":480,"wires":[["548e48c7.cafa98","78ff2e1b.7b49c","f709d0b0.9d255"],[],[]]},{"id":"5857388d.669678","type":"function","z":"546bb50e.78adfc","name":"gif name","func":"//Using a random number,\n//a unique name is stored in a global variable\n//Using context store, this value is stored in\n//the file system to survive a reboot.\n//This name is also passed to the exec node.\n//The bash script uses it to name the final gif.\n\nvar x = Math.floor((Math.random() * 1000) + 1);\nvar gifName = \"img\" + x.toString();\nglobal.set(\"gifName\", gifName, \"default\");\nmsg.payload =  gifName;\nreturn msg;","outputs":1,"noerr":0,"x":460,"y":540,"wires":[["6bb644a9.20e0cc","61b6fdcd.919f04"]]},{"id":"548e48c7.cafa98","type":"function","z":"546bb50e.78adfc","name":"name gif","func":"//After the gif script has completed,\n//the global variable is used to pass on the \n//gif name to the Template node for display\nvar msg2={};\nvar gifName = global.get(\"gifName\");\nmsg.payload = gifName;\n\n\nreturn msg;","outputs":1,"noerr":0,"x":860,"y":440,"wires":[["b301d941.5c8d78"]]},{"id":"59bb18c9.54c7b8","type":"comment","z":"546bb50e.78adfc","name":"Set Start Time to record gif","info":"Set the inject node to the time you want \nrecording to start.\nThe exec node will run command to clear all\nimages currently stored from motion snapshots.\nFor example 06:00 will clear all images and start\nsaving images from 6 AM","x":210,"y":160,"wires":[]},{"id":"4c554974.f69318","type":"inject","z":"546bb50e.78adfc","name":"every minute","topic":"","payload":"","payloadType":"date","repeat":"60","crontab":"","once":false,"onceDelay":0.1,"x":220,"y":620,"wires":[["f709d0b0.9d255"]]},{"id":"f709d0b0.9d255","type":"exec","z":"546bb50e.78adfc","command":"/home/pi/.node-red/count-images.sh","addpay":false,"append":"","useSpawn":"false","timer":"","oldrc":false,"name":"Count images","x":640,"y":620,"wires":[["6923e886.ba6df8"],[],[]]},{"id":"6923e886.ba6df8","type":"ui_text","z":"546bb50e.78adfc","group":"b67801e.531e","order":2,"width":"5","height":"1","name":"Image Count","label":"Image count for next GIF --","format":"{{msg.payload}}","layout":"row-spread","x":1050,"y":620,"wires":[]},{"id":"ad29d171.0af1c","type":"inject","z":"546bb50e.78adfc","name":"On Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":"1","x":240,"y":360,"wires":[["548e48c7.cafa98"]]},{"id":"932be71b.6e0dc8","type":"comment","z":"546bb50e.78adfc","name":"Set Stop Time to record gif","info":"Set the inject node to the time you want \nrecording to stop.\nThe exec node will run an exec command to to ceate \nan animated gif from all the images that have been \nstored. It will also remove the original jpg images.\n","x":190,"y":420,"wires":[]},{"id":"cccbc6f.588cf38","type":"comment","z":"546bb50e.78adfc","name":"Push gif name","info":"In the event of a reboot a little extra push\nis needed to inject the gif name into the \ntemplate node.\nThis Inject node fires once on startup.","x":230,"y":320,"wires":[]},{"id":"66c87ff4.b753d","type":"comment","z":"546bb50e.78adfc","name":"Latest image","info":"This template node has the HTML code to display\nthe latest image from the motion program.\n","x":1030,"y":100,"wires":[]},{"id":"1ffdb497.6e9d0b","type":"comment","z":"546bb50e.78adfc","name":"Show GIF","info":"This template node has the HTML code to show\nthe animated gif.\nIt also contains code for a download link\nto save the current gif.","x":1040,"y":400,"wires":[]},{"id":"f57c7781.3d1538","type":"comment","z":"546bb50e.78adfc","name":"make-gif.sh","info":"This exec node runs the shell script that\ndoes all the work with ffmpeg.\nThe time stamp from the inject node is passed\ninto the exec node which uses it to name\nthe gif that results.\nWhen complete it passes a message on to the\n'name gif' function node.  This node ignores\nany content of the message.  It is just triggered \nby the event to pass on the gif name to the\ntemplate node.\nThis can take a few minutes to run depending on how\nmany images you have.\n\nYou can get make-gif.sh at:\nhttps://github.com/WillWelker/pi-temporal-camera/tree/master/bash\nThe script should be placed in your /home/pi/.node-red/ directory.\nYou can make the script file executable with:\nsudo chmod +x make-gif.sh or from the Pi Desktop environment,\nyou can right click the file > properties > Permissions, set\nexecutable to 'anyone'.","x":630,"y":440,"wires":[]},{"id":"c9ea73de.d71ed","type":"comment","z":"546bb50e.78adfc","name":"count-images.sh","info":"Every minute, a bash script is triggered to count\nthe images that have been stored in \n/home/pi/.node-red/static/seq/\nAt the end of the script an 'echo' command\npasses the value back as a msg.payload which\ngoes to a Dashboard text node.\n\nAlso,\nWhen the make-gif exec node completes, the \nwire that runs to this exec node causes it to run.\n\nYou can get count-images.sh at:\nhttps://github.com/WillWelker/pi-temporal-camera/tree/master/bash\nThe script should be placed in your /home/pi/.node-red/ directory.\nYou can make the script file executable with:\nsudo chmod +x make-gif.sh or from the Pi Desktop environment,\nyou can right click the file > properties > Permissions, set\nexecutable to 'anyone'.\n\n","x":640,"y":580,"wires":[]},{"id":"a8b20f6c.824df","type":"ui_button","z":"546bb50e.78adfc","name":"","group":"b67801e.531e","order":2,"width":"4","height":"1","passthru":false,"label":"Make GIF now","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","x":220,"y":540,"wires":[["5857388d.669678"]]},{"id":"5be3c4a.515f73c","type":"comment","z":"546bb50e.78adfc","name":"Dashboard button","info":"Dashboard button to make gif now with \nthe images currently in the seq directory.","x":210,"y":500,"wires":[]},{"id":"a256b17d.975eb","type":"ui_text","z":"546bb50e.78adfc","group":"b67801e.531e","order":2,"width":"3","height":"1","name":"Status","label":"Status:","format":"{{msg.payload}}","layout":"row-spread","x":1030,"y":560,"wires":[]},{"id":"78ff2e1b.7b49c","type":"change","z":"546bb50e.78adfc","name":"Done","rules":[{"t":"set","p":"payload","pt":"msg","to":"Done.","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":850,"y":580,"wires":[["a256b17d.975eb"]]},{"id":"6bb644a9.20e0cc","type":"change","z":"546bb50e.78adfc","name":"Working","rules":[{"t":"set","p":"payload","pt":"msg","to":"Working...","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":860,"y":540,"wires":[["a256b17d.975eb"]]},{"id":"546b61e.d452ca","type":"comment","z":"546bb50e.78adfc","name":"Status","info":"These two change nodes set the text output to 'Working...'\nat the beginning of the gif process and then 'Done.'\nat the the end of the proccess.","x":850,"y":500,"wires":[]},{"id":"2fc32348.f6a5dc","type":"ui_template","z":"546bb50e.78adfc","group":"d28118de.c73bd8","name":"Style for links","order":1,"width":"0","height":"0","format":"<style>\n/* unvisited link */\na:link {\n  color: blue;\n}\n\n/* visited link */\na:visited {\n  color: green;\n}\n\n/* mouse over link */\na:hover {\n  color: hotpink;\n}\n\n/* selected link */\na:active {\n  color: yellow;\n}\n</style>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":1030,"y":40,"wires":[[]]},{"id":"6586629d.a4953c","type":"inject","z":"546bb50e.78adfc","name":"Take Picture","topic":"","payload":"","payloadType":"date","repeat":"240","crontab":"","once":false,"onceDelay":0.1,"x":220,"y":120,"wires":[["1ccf9674.b66bca"]]},{"id":"13cf5762.20f3b9","type":"exec","z":"546bb50e.78adfc","command":"","addpay":true,"append":"","useSpawn":"false","timer":"","oldrc":false,"name":"Take Picture","x":710,"y":180,"wires":[[],[],[]]},{"id":"1ccf9674.b66bca","type":"function","z":"546bb50e.78adfc","name":"image name","func":"//creat new message object for second output\n//increase the outputs to 2 with the option below\nvar msg2 = {};\n\n//build the raspistill comand to take a picture\nvar imgPath = \"raspistill -o /home/pi/.node-red/static/seq/\" + msg.payload + \".jpg -w 640 -h 480\";\n//put the full raspistill comand into msg2.payload\nmsg2.payload = imgPath;\n\n\n//the first output will send msg\n//the second output will send msg2\nreturn [ msg, msg2 ];\n","outputs":2,"noerr":0,"x":450,"y":120,"wires":[["320e366b.bc000a"],["13cf5762.20f3b9"]]},{"id":"8e63a1a7.4fbcb","type":"comment","z":"546bb50e.78adfc","name":"exec raspistill","info":"This exec node runs the raspisill command\npassed from the previous function node,","x":710,"y":140,"wires":[]},{"id":"320e366b.bc000a","type":"delay","z":"546bb50e.78adfc","name":"","pauseType":"delay","timeout":"7","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":700,"y":80,"wires":[["3bce27d.6ce10d8"]]},{"id":"92422f97.8b6d9","type":"comment","z":"546bb50e.78adfc","name":"Display last","info":"Wait a few seconds for raspistill then\nsend image name to the template node.","x":710,"y":40,"wires":[]},{"id":"aaa1ea9a.835e18","type":"comment","z":"546bb50e.78adfc","name":"exec raspistill","info":"This exec node runs the raspisill command\npassed from the previous function node,","x":710,"y":240,"wires":[]},{"id":"d28118de.c73bd8","type":"ui_group","z":"","name":"Latest Image","tab":"96a299bc.6e1788","disp":true,"width":"12","collapse":false},{"id":"b67801e.531e","type":"ui_group","z":"","name":"Time Shift","tab":"96a299bc.6e1788","order":2,"disp":true,"width":"12","collapse":false},{"id":"96a299bc.6e1788","type":"ui_tab","z":"","name":"Main","icon":"dashboard"}]